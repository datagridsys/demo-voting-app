doctype: "com.datagridsys.doctype/skopos/model"
version: 1

components:
    vote:
        image: datagridsys/demo-vote:${vote_ver-latest}
        replicas: ${vote_replicas-5}
        lifecycle:
            quality_probe:
                steps:
                    - call:
                        label: "Verify new vote operation"
                        action: call_builtin_plugin
                        arguments:
                            plugin_image: datagridsys/skopos:demo
                            plugin_name: http
                            plugin_action: get_ok
                            plugin_timeout: ${plugin_timeout}
                            selector: "{{.id}}"
                            port: 80
                            path: "/"
                            timeout: ${plugin_check_timeout}
        provides:
            ports: [ "80" ]
        uses:
            redis: {}
        plugin:
            ec2-ecs:
                mem: 128 #MB
        visual:
            x: 375
            y: 70

    redis:
        image: redis:${redis_ver-3.2.3}
        replicas: 1
        provides:
            ports: [ "6379" ]
        plugin:
            ec2-ecs:
                mem: 128    #MB
        visual:
            x: 750
            y: 165
        lifecycle:
            quality_probe:
                steps:
                    - call:
                        plugin: docker
                        action: comp_signal
                        label: "Re-attach workers to redis"
                        arguments:  { component: "worker", signal: "INT" }
                    - call:
                        label: "Verify new redis operation"
                        action: call_plugin
                        arguments:
                            plugin_image: datagridsys/demo-plugin-redis
                            plugin_action: check_ok
                            plugin_timeout: ${plugin_timeout}
                            selector: "{{.id}}"
                            port: 6379
                            timeout: ${plugin_check_timeout}

    worker:
        image: datagridsys/demo-worker:2.0
        replicas: ${worker_replicas-3}
        uses:
            db: {}
            redis: {}
        plugin:
            ec2-ecs:
                mem: 128    #MB
        visual:
            x: 375
            y: 260

    db:
        image: postgres:${db_ver-9.4}
        singleton: true
        provides:
            ports: [ "5432" ]
        plugin:
            ec2-ecs:
                mem: 256    #MB
        visual:
            x: 750
            y: 375
        lifecycle:
            quality_probe:
                steps:
                    - call:
                        label: "Verify new db operation"
                        action: call_plugin
                        arguments:
                            plugin_image: datagridsys/demo-plugin-postgres
                            plugin_action: check_ok
                            plugin_timeout: ${plugin_timeout}
                            selector: "{{.id}}"
                            port: 5432
                            timeout: ${plugin_check_timeout}

    result:
        image: datagridsys/demo-result:${result_ver-latest}
        singleton: true
        provides:
            ports: [ "80" ]
        uses:
            db: {}
        plugin:
            ec2-ecs:
                mem: 128    #MB
        visual:
            x: 375
            y: 490
        lifecycle:
            quality_probe:
                steps:
                    - call:
                        label: "Verify new result operation"
                        action: call_builtin_plugin
                        arguments:
                            plugin_image: datagridsys/skopos:demo
                            plugin_name: http
                            plugin_action: get_ok
                            plugin_timeout: ${plugin_timeout}
                            selector: "{{.id}}"
                            port: 80
                            path: "/index.html"
                            timeout: ${plugin_check_timeout}

    # begin canary component
    # end canary component

gateways:
    voting-gwy:
        type: load_balancer
        exposes:
            - port: "${voting_port}/tcp"
              target_port: "${voting_target_port-}"
              remap: ${voting_remap-}
        target: [vote]
        visual:
            x: 50
            y: 70
    result-gwy:
        type: ${result_gwy_type-host_port}
        exposes:
            - port: "${result_port}/tcp"
              target_port: "80"
        target: [result]
        visual:
            x: 50
            y: 490

    # begin canary gateway
    # end canary gateway
